from random import randint


def func_delete(list_d):
    """
    Функция проверяет соседние элементы
    Если следующий элемент меньше предыдущего, то следующий удаляется

    :param list_d:  Список на ввод
    :return:        Список на вывод
    """

    # Список для хранения помеченных к удалению элементов
    list_check = []

    # Для каждого элемента списка
    # index - номер элемента в редактируемом списке
    # i     - значение элемента, не используется
    for index, i in enumerate(list_d):
        # Начиная со второго элемента
        if index > 0:
            # Проверить, меньше/равен ли он предыдущему
            if list_d[index] <= list_d[index - 1]:
                # Если меньше/равен, то записать номер элемента в список помеченных к удалению элементов
                list_check.append(index)

    # var_a - переменная для коррекции нумерации элементов редактируемого списка при удалении элементов
    var_a = 0
    # Для каждого элемента помеченного к удалению
    for i in list_check:
        # Удалить элемент с поправкой на коррекцию
        list_d.remove(list_d[i - var_a])
        # Рассчет коррекции, так как после удаления элемента список станет короче
        var_a += 1

    # Возврат списка просле проверок
    return list_d


# Генерация исходного списка, десять элементов-чисел со значениями от 0 до 299
list_1 = list(randint(0, 300) for i in range(1, 10))
print(list_1)

# Обновление исодного списка с исопльзованием функции удаления и вывод на экран
list1 = func_delete(list_1)
print(list1)
